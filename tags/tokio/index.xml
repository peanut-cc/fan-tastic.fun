<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tokio on fan-tastic.fun</title><link>https://www.fan-tastic.fun/tags/tokio/</link><description>Recent content in tokio on fan-tastic.fun</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>by fan-tastic.fun</copyright><lastBuildDate>Tue, 22 Aug 2023 01:14:13 +0800</lastBuildDate><atom:link href="https://www.fan-tastic.fun/tags/tokio/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust笔记----tokio中的timer</title><link>https://www.fan-tastic.fun/post/rust_tokio_timer/</link><pubDate>Tue, 22 Aug 2023 01:14:13 +0800</pubDate><guid>https://www.fan-tastic.fun/post/rust_tokio_timer/</guid><description>tokio 的timer模块中的几个概念: Duration类型：是对std::time::Duration的重新导出,两者等价 Instant类型：从程</description></item><item><title>Rust笔记----tokio中的task</title><link>https://www.fan-tastic.fun/post/rust_tokio_task/</link><pubDate>Sun, 20 Aug 2023 18:01:26 +0800</pubDate><guid>https://www.fan-tastic.fun/post/rust_tokio_task/</guid><description>task: Asynchronous green-threads. Rust中的原生线程(std::thread)是OS线程,每一个原生线程,都对应一个操作系统的线程.green thread则是用户空间</description></item><item><title>Rust笔记----tokio中的runtime</title><link>https://www.fan-tastic.fun/post/rust_tokio_runtime/</link><pubDate>Fri, 11 Aug 2023 10:54:37 +0800</pubDate><guid>https://www.fan-tastic.fun/post/rust_tokio_runtime/</guid><description>使用tokio 需要先创建异步运行时环境(Runtime),然后在Runtime中执行异步任务. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 use tokio; fn main() { // 创建r</description></item></channel></rss>